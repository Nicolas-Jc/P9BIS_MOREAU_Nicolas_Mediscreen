version: '3'

services:
  mysqldb:
    image: mysql:8.0.33
    container_name: mysqldb
    # volumes : afin de persister les données en local, dans db_data
    volumes:
      - db_mysql:/var/lib/mysql
    # variables d'environnement
    environment:
      MYSQL_ROOT_PASSWORD: rootpwd
      MYSQL_DATABASE: mediscreen
      MYSQL_USER: patient
      MYSQL_PASSWORD: patient
    ports:
      - "3307:3306"
    # si le serveur MySQL s'arrête, celui-ci redémarrera automatiquement
    restart: always

  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - db_mongo:/var/lib/mongodb
      - mongo_config:/data/configdb
    ports:
      - "27018:27017"
    restart: always


  patient-microservice:
    image: patient-microservice
    container_name: patient-microservice
    build:
      context: patient
      dockerfile: dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/mediscreen?serverTimezone=UTC&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: patient
      SPRING_DATASOURCE_PASSWORD: patient
    ports:
      - "9091:9091"
    depends_on:
      - mysqldb
    restart: always


  note-microservice:
    image: note-microservice
    container_name: note-microservice
    build:
      context: note
      dockerfile: dockerfile
    environment:
      SPRING_DATA_MONGODB_HOST: mongodb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_DATABASE: mediscreen
    ports:
      - "9092:9092"
    depends_on:
      - mongodb
    restart: always

  assessment-microservice:
    image: assessment-microservice
    container_name: assessment-microservice
    build:
      context: assessment
      dockerfile: dockerfile
    environment:
      MICROSERVICE_PATIENTS_URL: http://patient-microservice:9091
      MICROSERVICE_NOTES_URL: http://note-microservice:9092
    ports:
      - "9093:9093"
    depends_on:
      - patient-microservice
      - note-microservice
    restart: always

  clientui-microservice:
    image: clientui-microservice
    container_name: clientui-microservice
    build:
      context: clientui
      dockerfile: dockerfile
    environment:
      MICROSERVICE_PATIENTS_URL: http://patient-microservice:9091
      MICROSERVICE_NOTES_URL: http://note-microservice:9092
      MICROSERVICE_ASSESSMENT_URL: http://assessment-microservice:9093
    ports:
      - "9090:9090"
    depends_on:
      - patient-microservice
      - note-microservice
      - assessment-microservice
    restart: always

volumes:
  db_mysql: { }
  db_mongo: { }
  mongo_config: { }
